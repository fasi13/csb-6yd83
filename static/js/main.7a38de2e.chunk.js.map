{"version":3,"sources":["MicroClient.js","App.js","index.js"],"names":["cache","js","css","loadBundle","clientName","bundleHost","promiseChain","Promise","resolve","then","url","console","debug","reject","link","document","createElement","onerror","Error","onload","rel","type","href","head","appendChild","loadCSS","script","async","src","body","window","default","loadJS","MicroClient","rest","LoadableClient","loadable","loader","loading","baseUrl","App","className","id","to","path","render","props","shellUrl","exact","React","ReactDOM","rootElement","getElementById"],"mappings":"mQAGMA,EAAQ,CACZC,GAAI,GACJC,IAAK,IA6CDC,EAAa,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAC5BC,EAAeC,QAAQC,UAa3B,OATAF,EAAeA,EAAaG,MAAK,kBA1BnB,SAACC,EAAKN,GAkBpB,OAjBKJ,EAAME,IAAIQ,KACbC,QAAQC,MAAR,+BAAsCR,EAAtC,YACAJ,EAAME,IAAIQ,GAAO,IAAIH,SAAQ,SAACC,EAASK,GACrC,IAAMC,EAAOC,SAASC,cAAc,QACpCF,EAAKG,QAAU,WACbJ,EAAO,IAAIK,MAAJ,sCAAyCd,EAAzC,WAETU,EAAKK,OAAS,WACZR,QAAQC,MAAR,uBAA8BR,EAA9B,gBACAI,KAEFM,EAAKM,IAAM,aACXN,EAAKO,KAAO,WACZP,EAAKQ,KAAOZ,EACZK,SAASQ,KAAKC,YAAYV,OAGvBd,EAAME,IAAIQ,GASfe,CAAQ,GAAD,OAAIpB,EAAJ,aAA2BD,MAIpCE,EAAeA,EAAaG,MAAK,kBApDpB,SAACC,EAAKN,GAkBnB,OAjBKJ,EAAMC,GAAGS,KACZC,QAAQC,MAAR,+BAAsCR,EAAtC,WACAJ,EAAMC,GAAGS,GAAO,IAAIH,SAAQ,SAACC,EAASK,GACpC,IAAMa,EAASX,SAASC,cAAc,UACtCU,EAAOT,QAAU,WACfJ,EAAO,IAAIK,MAAJ,sCAAyCd,EAAzC,UAETsB,EAAOP,OAAS,WACdR,QAAQC,MAAR,uBAA8BR,EAA9B,eACAI,KAEFkB,EAAOC,OAAQ,EACfD,EAAOE,IAAMlB,EACbgB,EAAOL,KAAO,SACdN,SAASc,KAAKL,YAAYE,OAGvB1B,EAAMC,GAAGS,GAAKD,MAAK,kBAAMqB,OAAO1B,GAAY2B,WAmCjDC,CAAO,GAAD,OAAI3B,EAAJ,YAA0BD,MAG3BE,GAwBM2B,EArBK,SAAC,GAAyC,IAAvC7B,EAAsC,EAAtCA,WAAYC,EAA0B,EAA1BA,WAAe6B,EAAW,iBAErDC,EAAiBC,IAAS,CAC9BC,OAAQ,kBAAMlC,EAAW,CAAEC,aAAYC,gBACvCiC,QAAS,kBAAM,gDAcjB,OAAO,cAACH,EAAD,aAAgBI,SAAO,GAAKL,KC1CtBM,G,MAtCH,WACV,OACE,cAAC,IAAD,UACE,sBAAKC,UAAU,MAAMC,GAAG,mBAAxB,UACE,4CACA,gCACE,cAAC,IAAD,CAAMC,GAAG,aAAT,uBADF,KAC2C,IACzC,cAAC,IAAD,CAAMA,GAAG,YAAT,yBAEF,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,KAAK,aACLC,OAAQ,SAACC,GAAD,OACN,cAAC,EAAD,aACEC,SAAS,YACT3C,WAAW,mBACXC,WAAW,gCACPyC,OAIV,cAAC,IAAD,CACEF,KAAK,YACLI,OAAK,EACLH,OAAQ,SAACC,GAAD,OACN,cAAC,EAAD,aACE1C,WAAW,kBACXC,WAAW,gCACPyC,iBC7BpBhB,OAAM,MAAYmB,IAClBnB,OAAO,aAAeoB,IAEtB,IAAMC,EAAcpC,SAASqC,eAAe,QAC5CF,IAASL,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFM,K","file":"static/js/main.7a38de2e.chunk.js","sourcesContent":["import loadable from \"react-loadable\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nconst cache = {\n  js: {},\n  css: {}\n};\n\nconst loadJS = (url, clientName) => {\n  if (!cache.js[url]) {\n    console.debug(`[client-hub] Loading ${clientName} js...`);\n    cache.js[url] = new Promise((resolve, reject) => {\n      const script = document.createElement(\"script\");\n      script.onerror = () => {\n        reject(new Error(`[client-hub] Failed to load ${clientName} js`));\n      };\n      script.onload = () => {\n        console.debug(`[client-hub] ${clientName} js loaded`);\n        resolve();\n      };\n      script.async = true;\n      script.src = url;\n      script.type = \"module\";\n      document.body.appendChild(script);\n    });\n  }\n  return cache.js[url].then(() => window[clientName].default);\n};\n\nconst loadCSS = (url, clientName) => {\n  if (!cache.css[url]) {\n    console.debug(`[client-hub] Loading ${clientName} css...`);\n    cache.css[url] = new Promise((resolve, reject) => {\n      const link = document.createElement(\"link\");\n      link.onerror = () => {\n        reject(new Error(`[client-hub] Failed to load ${clientName} css`));\n      };\n      link.onload = () => {\n        console.debug(`[client-hub] ${clientName} css loaded`);\n        resolve();\n      };\n      link.rel = \"stylesheet\";\n      link.type = \"text/css\";\n      link.href = url;\n      document.head.appendChild(link);\n    });\n  }\n  return cache.css[url];\n};\n\nconst loadBundle = ({ clientName, bundleHost }) => {\n  let promiseChain = Promise.resolve();\n\n  // In development, CRA does not produce a separate CSS file\n  //if (process.env.NODE_ENV !== \"development\") {\n  promiseChain = promiseChain.then(() =>\n    loadCSS(`${bundleHost}/main.css`, clientName)\n  );\n  //}\n\n  promiseChain = promiseChain.then(() =>\n    loadJS(`${bundleHost}/main.js`, clientName)\n  );\n\n  return promiseChain;\n};\n\nconst MicroClient = ({ clientName, bundleHost, ...rest }) => {\n  // console.log(\"???\", rest);\n  const LoadableClient = loadable({\n    loader: () => loadBundle({ clientName, bundleHost }),\n    loading: () => <div>Loading...</div>\n    // render(loaded, props) {\n    //   let Component = loaded;\n    //   return <Component shellUrl=\"dashboard\" {...props} />;\n    // }\n  });\n\n  // Loadable({\n  //   render(loaded, props) {\n  //     let Component = loaded.default;\n  //     return <Component {...props}/>;\n  //   }\n  // });\n\n  return <LoadableClient baseUrl {...rest} />;\n};\n\nexport default MicroClient;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport MicroClient from \"./MicroClient\";\nimport \"./styles.css\";\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"App\" id=\"Dashboard-Client\">\n        <h1>Client Hub</h1>\n        <nav>\n          <Link to=\"/dashboard\">Dashboard</Link> |{\" \"}\n          <Link to=\"/settings\">Settings</Link>\n        </nav>\n        <Switch>\n          <Route\n            path=\"/dashboard\"\n            render={(props) => (\n              <MicroClient\n                shellUrl=\"dashboard\"\n                clientName=\"dashboard-client\"\n                bundleHost=\"https://csb-3m3qm.vercel.app\"\n                {...props}\n              />\n            )}\n          />\n          <Route\n            path=\"/settings\"\n            exact\n            render={(props) => (\n              <MicroClient\n                clientName=\"settings-client\"\n                bundleHost=\"https://csb-4fvs5.vercel.app\"\n                {...props}\n              />\n            )}\n          />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React, { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nwindow[\"react\"] = React;\nwindow[\"react-dom\"] = ReactDOM;\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}